{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kedar/Documents/my projects/web/Next Js/nextjs-auth/components/auth/auth-form.js\";\nimport { useRef, useState } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nconst createUser = async (email, password) => {\n  const res = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({\n      email: email,\n      password: password\n    }),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  const data = await res.json();\n\n  if (!res.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n\n  return data;\n};\n\nfunction AuthForm() {\n  const {\n    0: isLogin,\n    1: setIsLogin\n  } = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin(prevState => !prevState);\n  }\n\n  const submitEventHandler = async event => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword\n      });\n      console.log(result);\n\n      if (!result.error) {\n        router.replace(\"/profile\");\n      }\n    } else {\n      try {\n        const user = await createUser(enteredEmail, enteredPassword);\n        console.log(user);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.auth,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: isLogin ? \"Login\" : \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitEventHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Your Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          required: true,\n          ref: emailRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          required: true,\n          ref: passwordRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: isLogin ? \"Login\" : \"Create Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: classes.toggle,\n          onClick: switchAuthModeHandler,\n          children: isLogin ? \"Create new account\" : \"Login with existing account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\nexport default AuthForm;","map":{"version":3,"sources":["/home/kedar/Documents/my projects/web/Next Js/nextjs-auth/components/auth/auth-form.js"],"names":["useRef","useState","classes","signIn","useRouter","createUser","email","password","res","fetch","method","body","JSON","stringify","headers","data","json","ok","Error","message","AuthForm","isLogin","setIsLogin","emailRef","passwordRef","router","switchAuthModeHandler","prevState","submitEventHandler","event","preventDefault","enteredEmail","current","value","enteredPassword","result","redirect","console","log","error","replace","user","auth","control","actions","toggle"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAU,GAAG,OAAOC,KAAP,EAAcC,QAAd,KAA2B;AAC5C,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAqB;AAC1CC,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAK,EAAEA,KAAT;AAAgBC,MAAAA,QAAQ,EAAEA;AAA1B,KAAf,CAFoC;AAG1CO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHiC,GAArB,CAAvB;AAQA,QAAMC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAJ,EAAnB;;AAEA,MAAI,CAACR,GAAG,CAACS,EAAT,EAAa;AACX,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,sBAA1B,CAAN;AACD;;AAED,SAAOJ,IAAP;AACD,CAhBD;;AAiBA,SAASK,QAAT,GAAoB;AAClB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBrB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMsB,QAAQ,GAAGvB,MAAM,EAAvB;AACA,QAAMwB,WAAW,GAAGxB,MAAM,EAA1B;AACA,QAAMyB,MAAM,GAAGrB,SAAS,EAAxB;;AAEA,WAASsB,qBAAT,GAAiC;AAC/BJ,IAAAA,UAAU,CAAEK,SAAD,IAAe,CAACA,SAAjB,CAAV;AACD;;AAED,QAAMC,kBAAkB,GAAG,MAAOC,KAAP,IAAiB;AAC1CA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,YAAY,GAAGR,QAAQ,CAACS,OAAT,CAAiBC,KAAtC;AACA,UAAMC,eAAe,GAAGV,WAAW,CAACQ,OAAZ,CAAoBC,KAA5C;;AAEA,QAAIZ,OAAJ,EAAa;AACX,YAAMc,MAAM,GAAG,MAAMhC,MAAM,CAAC,aAAD,EAAgB;AACzCiC,QAAAA,QAAQ,EAAE,KAD+B;AAEzC9B,QAAAA,KAAK,EAAEyB,YAFkC;AAGzCxB,QAAAA,QAAQ,EAAE2B;AAH+B,OAAhB,CAA3B;AAKAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AACA,UAAI,CAACA,MAAM,CAACI,KAAZ,EAAmB;AACjBd,QAAAA,MAAM,CAACe,OAAP,CAAe,UAAf;AACD;AACF,KAVD,MAUO;AACL,UAAI;AACF,cAAMC,IAAI,GAAG,MAAMpC,UAAU,CAAC0B,YAAD,EAAeG,eAAf,CAA7B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYG,IAAZ;AACD,OAHD,CAGE,OAAOF,KAAP,EAAc;AACdF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF;AACF,GAvBD;;AAyBA,sBACE;AAAS,IAAA,SAAS,EAAErC,OAAO,CAACwC,IAA5B;AAAA,4BACE;AAAA,gBAAKrB,OAAO,GAAG,OAAH,GAAa;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEO,kBAAhB;AAAA,8BACE;AAAK,QAAA,SAAS,EAAE1B,OAAO,CAACyC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,OAAZ;AAAoB,UAAA,EAAE,EAAC,OAAvB;AAA+B,UAAA,QAAQ,MAAvC;AAAwC,UAAA,GAAG,EAAEpB;AAA7C;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAErB,OAAO,CAACyC,OAAxB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,EAAE,EAAC,UAA1B;AAAqC,UAAA,QAAQ,MAA7C;AAA8C,UAAA,GAAG,EAAEnB;AAAnD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAEtB,OAAO,CAAC0C,OAAxB;AAAA,gCACE;AAAA,oBAASvB,OAAO,GAAG,OAAH,GAAa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAEnB,OAAO,CAAC2C,MAFrB;AAGE,UAAA,OAAO,EAAEnB,qBAHX;AAAA,oBAKGL,OAAO,GAAG,oBAAH,GAA0B;AALpC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;AAED,eAAeD,QAAf","sourcesContent":["import { useRef, useState } from \"react\";\nimport classes from \"./auth-form.module.css\";\nimport { signIn } from \"next-auth/client\";\nimport { useRouter } from \"next/router\";\n\nconst createUser = async (email, password) => {\n  const res = await fetch(\"/api/auth/signup\", {\n    method: \"POST\",\n    body: JSON.stringify({ email: email, password: password }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n\n  const data = await res.json();\n\n  if (!res.ok) {\n    throw new Error(data.message || \"Something went wrong\");\n  }\n\n  return data;\n};\nfunction AuthForm() {\n  const [isLogin, setIsLogin] = useState(true);\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const router = useRouter();\n\n  function switchAuthModeHandler() {\n    setIsLogin((prevState) => !prevState);\n  }\n\n  const submitEventHandler = async (event) => {\n    event.preventDefault();\n    const enteredEmail = emailRef.current.value;\n    const enteredPassword = passwordRef.current.value;\n\n    if (isLogin) {\n      const result = await signIn(\"credentials\", {\n        redirect: false,\n        email: enteredEmail,\n        password: enteredPassword,\n      });\n      console.log(result);\n      if (!result.error) {\n        router.replace(\"/profile\");\n      }\n    } else {\n      try {\n        const user = await createUser(enteredEmail, enteredPassword);\n        console.log(user);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  return (\n    <section className={classes.auth}>\n      <h1>{isLogin ? \"Login\" : \"Sign Up\"}</h1>\n      <form onSubmit={submitEventHandler}>\n        <div className={classes.control}>\n          <label htmlFor=\"email\">Your Email</label>\n          <input type=\"email\" id=\"email\" required ref={emailRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor=\"password\">Your Password</label>\n          <input type=\"password\" id=\"password\" required ref={passwordRef} />\n        </div>\n        <div className={classes.actions}>\n          <button>{isLogin ? \"Login\" : \"Create Account\"}</button>\n          <button\n            type=\"button\"\n            className={classes.toggle}\n            onClick={switchAuthModeHandler}\n          >\n            {isLogin ? \"Create new account\" : \"Login with existing account\"}\n          </button>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AuthForm;\n"]},"metadata":{},"sourceType":"module"}